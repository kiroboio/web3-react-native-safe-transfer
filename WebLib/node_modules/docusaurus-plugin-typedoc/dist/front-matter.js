"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FrontMatterComponent = void 0;
const path = __importStar(require("path"));
const typedoc_1 = require("typedoc");
const front_matter_1 = require("typedoc-plugin-markdown/dist/utils/front-matter");
const components_1 = require("typedoc/dist/lib/converter/components");
const components_2 = require("typedoc/dist/lib/output/components");
const events_1 = require("typedoc/dist/lib/output/events");
let FrontMatterComponent = class FrontMatterComponent extends components_2.RendererComponent {
    constructor() {
        super(...arguments);
        this.entryDocument = 'index.md';
        this.globalsFile = 'modules.md';
    }
    initialize() {
        super.initialize();
        this.listenTo(this.application.renderer, {
            [events_1.PageEvent.END]: this.onPageEnd,
        });
    }
    onPageEnd(page) {
        if (page.contents) {
            page.contents = front_matter_1.prependYAML(page.contents, this.getYamlItems(page));
        }
    }
    getYamlItems(page) {
        const pageId = this.getId(page);
        const pageTitle = this.getTitle(page);
        const sidebarLabel = this.getSidebarLabel(page);
        const sidebarPosition = this.getSidebarPosition(page);
        let items = {
            id: pageId,
            title: pageTitle,
        };
        if (page.url === this.entryDocument) {
            items = {
                ...items,
                slug: '/' + path.relative(process.cwd(), this.out),
            };
        }
        if (sidebarLabel && sidebarLabel !== pageTitle) {
            items = { ...items, sidebar_label: sidebarLabel };
        }
        if (sidebarPosition) {
            items = { ...items, sidebar_position: parseFloat(sidebarPosition) };
        }
        if (page.url === page.project.url && this.entryPoints.length > 1) {
            items = { ...items, hide_table_of_contents: true };
        }
        return {
            ...items,
            custom_edit_url: null,
        };
    }
    getSidebarLabel(page) {
        const indexLabel = this.sidebar.indexLabel ||
            (this.entryPoints.length > 1 ? 'Table of contents' : 'Exports');
        if (page.url === this.entryDocument) {
            return page.url === page.project.url
                ? indexLabel
                : this.sidebar.readmeLabel;
        }
        if (page.url === this.globalsFile) {
            return indexLabel;
        }
        return this.sidebar.fullNames ? page.model.getFullName() : page.model.name;
    }
    getSidebarPosition(page) {
        if (page.url === this.entryDocument) {
            return page.url === page.project.url ? '0.5' : '0';
        }
        if (page.url === this.globalsFile) {
            return '0.5';
        }
        if (page.model.getFullName().split('.').length === 1) {
            return '0';
        }
        return null;
    }
    getId(page) {
        return path.basename(page.url, path.extname(page.url));
    }
    getTitle(page) {
        const readmeTitle = this.readmeTitle || page.project.name;
        if (page.url === this.entryDocument && page.url !== page.project.url) {
            return readmeTitle;
        }
        return front_matter_1.getPageTitle(page);
    }
};
__decorate([
    typedoc_1.BindOption('out')
], FrontMatterComponent.prototype, "out", void 0);
__decorate([
    typedoc_1.BindOption('docsRoot')
], FrontMatterComponent.prototype, "docsRoot", void 0);
__decorate([
    typedoc_1.BindOption('sidebar')
], FrontMatterComponent.prototype, "sidebar", void 0);
__decorate([
    typedoc_1.BindOption('globalsTitle')
], FrontMatterComponent.prototype, "globalsTitle", void 0);
__decorate([
    typedoc_1.BindOption('readmeTitle')
], FrontMatterComponent.prototype, "readmeTitle", void 0);
__decorate([
    typedoc_1.BindOption('entryPoints')
], FrontMatterComponent.prototype, "entryPoints", void 0);
FrontMatterComponent = __decorate([
    components_1.Component({ name: 'front-matter' })
], FrontMatterComponent);
exports.FrontMatterComponent = FrontMatterComponent;

"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const path = __importStar(require("path"));
const typedoc_1 = require("typedoc");
const typedoc_plugin_markdown_1 = require("typedoc-plugin-markdown");
const options_1 = require("./options");
const render_1 = require("./render");
const sidebar_1 = require("./sidebar");
const apps = [];
async function pluginDocusaurus(context, opts) {
    if (opts.id && !apps.includes(opts.id)) {
        apps.push(opts.id);
        const { siteDir } = context;
        const app = new typedoc_1.Application();
        app.options.setValue('theme', path.resolve(__dirname));
        typedoc_plugin_markdown_1.load(app);
        const options = render_1.bootstrap(app, opts);
        if (options.sidebar.sidebarFile) {
            sidebar_1.writeSidebar(siteDir, options);
        }
        const project = app.convert();
        if (!project) {
            return;
        }
        if (options.watch) {
            app.convertAndWatch(async (project) => {
                await app.generateDocs(project, options_1.getOutputDirectory(siteDir, options));
            });
        }
        else {
            await app.generateDocs(project, options_1.getOutputDirectory(siteDir, options));
        }
    }
    return {
        name: 'docusaurus-plugin-typedoc',
    };
}
exports.default = pluginDocusaurus;

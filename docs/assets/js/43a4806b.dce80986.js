(self.webpackChunkweb_lib=self.webpackChunkweb_lib||[]).push([[3072],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,b=d["".concat(p,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(b,i(i({ref:t},s),{},{components:n})):r.createElement(b,i({ref:t},s))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6274:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return p},metadata:function(){return l},toc:function(){return s},default:function(){return d}});var r=n(2122),o=n(9756),a=(n(7294),n(3905)),i=["components"],c={id:"index",title:"@kiroboio/web3-react-safe-transfer",slug:"/Api/context",sidebar_label:"Readme",sidebar_position:0,custom_edit_url:null},p=void 0,l={unversionedId:"Api/context/index",id:"Api/context/index",isDocsHomePage:!1,title:"@kiroboio/web3-react-safe-transfer",description:"Context",source:"@site/docs/Api/context/index.md",sourceDirName:"Api/context",slug:"/Api/context",permalink:"/web3-lib/docs/Api/context",editUrl:null,version:"current",sidebarPosition:0,frontMatter:{id:"index",title:"@kiroboio/web3-react-safe-transfer",slug:"/Api/context",sidebar_label:"Readme",sidebar_position:0,custom_edit_url:null},sidebar:"notMyAutogeneratedSidebar",previous:{title:"Exports",permalink:"/web3-lib/docs/Debugging/modules"},next:{title:"Exports",permalink:"/web3-lib/docs/Api/context/modules"}},s=[{value:"Context",id:"context",children:[]}],u={toc:s};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"context"},"Context"),(0,a.kt)("h4",{id:"kirobo-provider"},"Kirobo Provider"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"KiroboProvider"),"  wrap all children with ",(0,a.kt)("inlineCode",{parentName:"p"},"AccountContext")," and implement all actions related to ",(0,a.kt)("inlineCode",{parentName:"p"},"web3")," like ",(0,a.kt)("inlineCode",{parentName:"p"},"deposit")," ,",(0,a.kt)("inlineCode",{parentName:"p"},"retrieve")," , ",(0,a.kt)("inlineCode",{parentName:"p"},"collect"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"swap")," transaction after invoking appropriate action from ",(0,a.kt)("inlineCode",{parentName:"p"},"AccountProvider")),(0,a.kt)("h4",{id:"use-account"},"Use Account"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},(0,a.kt)("a",{href:"/docs/Api/stores/interfaces/IAccount"},"Account Store Interface"))),(0,a.kt)("p",null,"To use ",(0,a.kt)("inlineCode",{parentName:"p"},"account")," store wrap application ",(0,a.kt)("inlineCode",{parentName:"p"},"components")," with ",(0,a.kt)("inlineCode",{parentName:"p"},"KiroboProvider")," context"),(0,a.kt)("hr",null),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"KiroboProvider Application Wrapper")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import { KiroboProvider } from './kirobo'\n\nReactDOM.render(\n  <KiroboProvider>\n    <App />\n  </KiroboProvider>,\n  document.getElementById('root')\n)\n\n")),(0,a.kt)("p",null,"Account store use ",(0,a.kt)("inlineCode",{parentName:"p"},"mobx-state-tree")," lib for  ",(0,a.kt)("a",{parentName:"p",href:"https://mobx-state-tree.js.org/intro/welcome"},"reactive state management "),". To re-render react component on account state change use ",(0,a.kt)("a",{parentName:"p",href:"https://mobx-state-tree.js.org/intro/getting-started#getting-to-the-ui"},"observer")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Each ",(0,a.kt)("inlineCode",{parentName:"em"},"observer")," declaration will enable the React component to only re-render if any of it's observed data changes.")),(0,a.kt)("hr",null),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Connect with metamask")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"export const App = observer(() => {\n  const {\n    connect,\n  } = useAccount()\n  \n  const handleLogin = () => {\n      connect(Connectors.Injected)\n  }\n  \n  return <Wallet onLogin={handleLogin} />\n})\n")),(0,a.kt)("hr",null),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Account Store States")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import React from 'react'\nimport { Wallet } from \"./Wallet\"\nimport { useAccount, observer } from '@kiroboio/web3-react-safe-transfer'\n\nexport const Wallet = observer(() => {\n  const {\n    address,\n    balance,\n  } = useAccount()\n    \n  return (\n      <div className=\"wallet\">\n        address: { address }\n        balance: { balance }                 \n      </div>\n    )\n})\n")),(0,a.kt)("hr",null),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Account Store States & Deposit Action")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"import React from 'react'\nimport { Button } from \"./Button\"\nimport { useAccount, observer, Connectors, currencyValueToWei } from '@kiroboio/web3-react-safe-transfer'\n\nexport const DepositButton = observer(() => {\n    const {\n        address,\n        deposit,\n        currency,\n    } = useAccount()\n\n    const handleDeposit = ({\n            to,\n            value,\n            passcode,\n            message,\n        }: DepositParams) => {\n\n        deposit.run({\n            to,\n            value: currencyValueToWei(value, currency.decimals),\n            passcode,\n            message,\n        })\n    }\n    \n    return <Button title=\"Send\" onClick={handleDeposit} />\n})\n")))}d.isMDXComponent=!0}}]);
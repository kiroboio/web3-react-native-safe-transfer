/// <reference types="node" />
import { FliegdocConfig } from '../../model';
/**
 * Copy static files to the output
 *
 * @param staticFiles - map of static files, where `staticFiles[original path] = target path`
 * @param createFile - the {@link CreateFileFunction}
 * @param config - the {@link FliegdocConfig}
 *
 * @example
 * ```ts
 * const {staticFiles, readmeImageReplacer} = getStaticFileHandler(config);
 *
 * write('readme', readmeContent.replace(/!\[(.*?)]\((.*?)\)/g, readmeImageReplacer));
 * await writeStaticFiles(staticFiles, createFile, Config);
 * ```
 */
export declare function writeStaticFiles(staticFiles: Record<string, string>, createFile: (path: string, content: Buffer, mimetype: string) => Promise<void>, config: FliegdocConfig): Promise<void>;
//# sourceMappingURL=writeStaticFiles.d.ts.map